=pod

=head1 NAME

SSL_add_expected_rpk,
SSL_get_negotiated_client_cert_type,
SSL_get_negotiated_server_cert_type,
SSL_get0_peer_rpk,
SSL_SESSION_get0_peer_rpk - raw public key (RFC7250) support

=head1 SYNOPSIS

 #include <openssl/ssl.h>

 int SSL_add_expected_rpk(SSL *s, EVP_PKEY *rpk, int nid);
 int SSL_get_negotiated_client_cert_type(const SSL *s);
 int SSL_get_negotiated_server_cert_type(const SSL *s);
 EVP_PKEY *SSL_get0_peer_rpk(const SSL *s);
 EVP_PKEY *SSL_SESSION_get0_peer_rpk(const SSL_SESSION *ss);

=head1 DESCRIPTION

SSL_add_expected_rpk() adds a public key into the DANE TLSA database.
argmument

SSL_get_negotiated_client_cert_type() returns the negotiated client certificate
type used on a conection.

SSL_get_negotiated_server_cert_type() returns the negotiated server certificate
type used on a conection.

SSL_get0_peer_rpk() returns the peer's raw public key from SSL B<s>.

SSL_SESSION_get0_peer_rpk() returns the peer's raw public key from
SSL_SESSION B<ss> in the case of resumption.

=head1 NOTES

Raw public keys are used in place of certificates when the option is
negotiated. Adding more than one key is possible to allow for key rotation,
where a peer might be expected to offer an "old" or "new" key and the endpoint
must be able to accept either one.  It also enables the use of different
types of keys along with signature-algorithm negotiation.

When raw public keys are used, the certificate verify callback is not called.
Raw public keys have no subject, issuer, validity dates nor digital signature.

The raw public key is normally taken from the certificate assigned to the
connection (e.g. via SSL_use_certificate()), but if a certificate is not
configured, then the public key will be extracted from the assigned
private key.

The SSL_add_expected_rpk() is a wrapper around SSL_dane_tlsa_add(). If DANE
is enabled, the TLSA database will be used to match a raw public key.
The B<nid> argument to SSL_add_expected_rpk() may be one of the following:

=over 4

=item NID_undef

Use the full value DER value of the public keys for comparison.

=item NID_sha256

Use the SHA256 hash of the public keys for comparison.

=item NID_sha512

Use the SHA512 hash of the public keys for comparison.

=back

=head1 RETURN VALUES

SSL_add_expected_rpk() returns 1 on success and 0 on failure.

SSL_get0_peer_rpk() and SSL_SESSION_get0_peer_rpk() return the peer's raw
public key as an EVP_PKEY or NULL when the raw public key is not available.

SSL_get_negotiated_client_cert_type() and SSL_get_negotiated_server_cert_type()
return the following values:

=over 4

=item TLSEXT_cert_type_x509

=item TLSEXT_cert_type_rpk

=back

=head1 SEE ALSO

L<SSL_CTX_dane_enable(3)>,
L<SSL_CTX_set_options(3)>,
L<SSL_dane_enable(3)>,
L<SSL_use_certificate(3)>

=head1 HISTORY

These functions were added in OpenSSL 3.2.

=head1 COPYRIGHT

Copyright 2022 The OpenSSL Project Authors. All Rights Reserved.

=cut
